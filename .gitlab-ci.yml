image: node:18
# Define the stages of your pipeline
stages:
  - build
  - test
  - package
  - deploy

variables:
  HOST_DNS: ec2-3-6-93-198.ap-south-1.compute.amazonaws.com

.login_template: &login
  - 'which ssh-agent || (apt-get update -y && apt-get install openssh-client -y)'
  - eval "$(ssh-agent -s)"
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan $HOST_DNS >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts



.install_rsync: &install_rsync
  - apt-get update
  - apt-get install -y rsync

cache:
  paths:
    - node_modules/
  key:
    files:
      - package-lock.json

# Job to build the Node.js application
build:
  stage: build
  script:
    - npm ci

# Job to run tests
test:
  stage: test
  script:
    - npm run test

#job to package
package:
  stage: package
  before_script:
    - *install_rsync
  script:
    - npm install --omit=dev
    - mkdir iconnect-app
    - rsync -av --exclude='iconnect-app' . iconnect-app/
  cache: []
  artifacts:
    paths:
      - iconnect-app

#Job to deploy the application
deploy:
  image: ubuntu:latest
  stage: deploy
  cache: []
  variables:
    GIT_STRATEGY: none
  before_script:
    - *install_rsync
    - *login
  script:
    - ls
    #- rsync -r -o StrictHostKeyChecking=no ./iconnect-app ec2-user@$HOST_DNS:/home/ec2-user
    - scp -r -o StrictHostKeyChecking=no ./iconnect-app ec2-user@3.6.93.198:/home/ec2-user


