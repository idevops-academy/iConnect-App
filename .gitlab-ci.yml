image: node:18


# include:
#   - template: Jobs/Dependency-Scanning.gitlab-ci.yml
#   - template: Jobs/SAST.gitlab-ci.yml
#   - template: Security/Secret-Detection.gitlab-ci.yml

variables:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  CONTAINER_BRANCH_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest


# Define the stages of your pipeline
stages:
  # - build
  # - test
  - containerize

cache:
  paths:
    - node_modules/
  key:
    files:
      - package-lock.json

# Job to build the Node.js application
# build:
#   stage: build
#   script:
#     - echo "Building the app..."
#     - npm ci
#   only:
#     - branches
#     - merge_requests

# # Job to run tests
# unit-tests:
#   stage: test
#   script:
#     - echo "Running tests"
#     - npm run test
#   coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
#   artifacts:
#     reports:
#       junit: junit.xml
#   only:
#     - branches
#     - merge_requests

build-image:
  stage: containerize
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  before_script:
    - echo "registry login"
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - echo "build docker image"
    - docker build --pull -t $CONTAINER_BRANCH_IMAGE .
    - echo "push docker image"
    - docker push $CONTAINER_BRANCH_IMAGE
  only:
    - feature/docker-build-push



