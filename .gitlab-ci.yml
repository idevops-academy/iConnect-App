image: node:18

include:
  template: Verify/Load-Performance-Testing.gitlab-ci.yml
  
include:
  template: Code-Quality.gitlab-ci.yml


# Define the stages of your pipeline
stages:
  - build
  - test
  - review
  - staging

variables:
  HOST_DNS: ec2-13-232-229-120.ap-south-1.compute.amazonaws.com

.login_template: &login
  - 'which ssh-agent || (apt-get update -y && apt-get install openssh-client -y)'
  - eval "$(ssh-agent -s)"
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan $HOST_DNS >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

.install_rsync: &install_rsync
  - apt-get update
  - apt-get install -y rsync

cache:
  paths:
    - node_modules/
  key:
    files:
      - package-lock.json

# Job to build the Node.js application
build:
  stage: build
  script:
    - echo "Building the app..."
    - npm ci

# # Job to run tests
run-unit-tests:
  stage: test
  script:
    - echo "Running tests"
    - npm run test
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/


run-api-tests:
  stage: staging
  image: cimg/base:2021.04
  before_script:
    # Installing Postman CLI
    - curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
  script:
    # Login using your Postman API keys
    - postman login --with-api-key $POSTMAN_API_KEY
    - postman collection run "28682864-cd88e482-b085-455b-bd2d-724fe3717829" -e "28682864-4cd65385-2b2c-4e5d-9e46-d61309015511"
  only:
    - main

load_performance:
  stage: test
  variables:
    K6_TEST_FILE: raw.githubusercontent.com/grafana/k6/master/examples/http_get.js
  script:
    - echo "test"


#Job to deploy the application to ec2 instance
Review_App:
  image: ubuntu:latest
  stage: review
  cache: []
  when: manual
  only:
    - merge_requests
  before_script:
    - *install_rsync
    - *login
  script:
    - sed -i "s~<username>~$USER_NAME~g" install_dependencies.sh
    - sed -i "s~<password>~$USER_PASSWORD~g" install_dependencies.sh
    - sed -i "s~<branchname>~$CI_COMMIT_REF_NAME~g" install_dependencies.sh
    - sed -i "s~<commit-sha>~$CI_COMMIT_SHORT_SHA~g" install_dependencies.sh
    - scp -r -o StrictHostKeyChecking=no ./install_dependencies.sh ec2-user@$HOST_DNS:/home/ec2-user
    - ssh ec2-user@$HOST_DNS -- chmod +x ./install_dependencies.sh
    - ssh ec2-user@$HOST_DNS ./install_dependencies.sh